#0 building with "default" instance using docker driver

#1 [app internal] load build definition from Dockerfile
#1 transferring dockerfile: 254B done
#1 DONE 0.0s

#2 [app internal] load metadata for docker.io/library/python:3.11.9
#2 DONE 0.5s

#3 [app internal] load .dockerignore
#3 transferring context: 2B done
#3 DONE 0.0s

#4 [app 1/5] FROM docker.io/library/python:3.11.9@sha256:a03f4e5b67980d474839e7b4d4a405871a4259690287d65060cff95d0cb311cd
#4 DONE 0.0s

#5 [app internal] load build context
#5 transferring context: 1.26MB 0.3s done
#5 DONE 0.3s

#6 [app 2/5] WORKDIR /app
#6 CACHED

#7 [app 3/5] COPY requirements.txt requirements.txt
#7 CACHED

#8 [app 4/5] RUN pip install -r requirements.txt
#8 CACHED

#9 [app 5/5] COPY . .
#9 DONE 2.0s

#10 [app] exporting to image
#10 exporting layers
#10 exporting layers 0.8s done
#10 writing image sha256:4f2ef01e8ed61c75708ebbe16153eea5c38b7633f94189e683ddd93ca8b85026 done
#10 naming to docker.io/library/app done
#10 DONE 0.8s

#11 [app] resolving provenance for metadata file
#11 DONE 0.0s
Attaching to app, db, redis
redis  | 1:C 15 Jan 2025 14:45:11.886 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
redis  | 1:C 15 Jan 2025 14:45:11.886 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
redis  | 1:C 15 Jan 2025 14:45:11.886 * Redis version=7.4.2, bits=64, commit=00000000, modified=0, pid=1, just started
redis  | 1:C 15 Jan 2025 14:45:11.886 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf
redis  | 1:M 15 Jan 2025 14:45:11.886 * monotonic clock: POSIX clock_gettime
redis  | 1:M 15 Jan 2025 14:45:11.887 * Running mode=standalone, port=6379.
redis  | 1:M 15 Jan 2025 14:45:11.888 * Server initialized
redis  | 1:M 15 Jan 2025 14:45:11.888 * Ready to accept connections tcp
db     | 
db     | PostgreSQL Database directory appears to contain a database; Skipping initialization
db     | 
app    | Database is ready!
app    | INFO:     127.0.0.1:54086 - "GET /healthcheck HTTP/1.1" 200 OK
app    | INFO:     127.0.0.1:39456 - "GET /healthcheck HTTP/1.1" 200 OK
app    | INFO:     127.0.0.1:39468 - "GET /healthcheck HTTP/1.1" 200 OK
app    | INFO:     127.0.0.1:55354 - "GET /healthcheck HTTP/1.1" 200 OK
app    | INFO:     127.0.0.1:55364 - "GET /healthcheck HTTP/1.1" 200 OK
app    | INFO:     127.0.0.1:55070 - "GET /healthcheck HTTP/1.1" 200 OK
