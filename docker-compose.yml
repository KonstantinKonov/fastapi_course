services:
  server:
    container_name: nginx-app
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf 
    networks:
      - mynetwork
    ports:
      - 80:80
    restart: always
    depends_on:
      - db

  app:
    container_name: app
    image: app
    build: .
    env_file: .env
    networks:
      - mynetwork
    #ports:
    #  - 8080:8090
    healthcheck:
      test: ["CMD-SHELL", "curl --fail localhost:8090/healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 3
    depends_on:
      - db
      - redis
      - celery_worker
      - celery_beat

  db:
    image: postgres:14
    container_name: db
    env_file: .env
    volumes:
      - db_vol_data:/var/lib/postgresql/data
    networks:
      - mynetwork
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d booking -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3

  redis:
    image: redis
    container_name: redis
    env_file: .env
    networks:
      - mynetwork
    ports:
      - 6379:6379


  celery_worker:
    build: 
      context: .
    container_name: celery_worker
    env_file: .env
    networks:
      - mynetwork
    command: celery -A src.tasks.celery_app:celery_instance worker -l INFO

  celery_beat:
    build: 
      context: .
    container_name: celery_beat
    env_file: .env
    networks:
      - mynetwork
    command: celery -A src.tasks.celery_app:celery_instance beat -l INFO


volumes:
  db_vol_data:
    name: db_vol_data

networks:
  mynetwork:
    name: mynetwork